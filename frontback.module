<?php

/**
 * @file
 * Integrates the Frontback Web Feedback Tool into Drupal.
 */

/**
 * Implements hook_menu().
 */
function frontback_menu() {
  $items = [];
  $items['admin/config/services/frontback'] = [
    'title' => 'Frontback Settings',
    'description' => 'Frontback endpoint and repo settings',
    'route_name' => 'frontback.settings',
  ];

  return $items;
}

/**
 * Implements hook_page_attachments().
 */
function frontback_page_attachments(array &$page) {
  $page['#cache']['tags'][] = 'config:frontback.admin_settings';

  if (\Drupal::currentUser()->hasPermission('access frontback')) {
    $settings = _frontback_get_settings();
    $is_admin_route = \Drupal::service('router.admin_context')->isAdminRoute();
    if (
      ($is_admin_route && $settings['show_on_admin_routes'])
      || (!$is_admin_route && $settings['show_on_nonadmin_routes'])
    ) {
      if ($settings['frontback']['repo_id'] && $settings['frontback']['endpoint']) {
        $page['#attached']['drupalSettings']['frontback'] = $settings['frontback'];
        $page['#attached']['library'][] = 'frontback/frontback';
      }
    }
  }
}

/**
 * Helper function to return frontback widget settings to the current page.
 */
function _frontback_get_settings() {
  $config = \Drupal::config('frontback.admin_settings');

  $settings_object = [
    'frontback' => [
      'repo_id' => ($config->get('frontback_repo_id') ? $config->get('frontback_repo_id') : ''),
      'endpoint' => ($config->get('frontback_endpoint') ? $config->get('frontback_endpoint') : ''),
      'options' => [
        'hideButton' => $config->get('hide_button'),
        'hideAssigneeOptions' => $config->get('hide_assignee_options'),
        'hideReporterOptions' => $config->get('hide_reporter_options'),
      ],
      // cache-bust every 10 min.
      'version' => (time() - (time() % 600)),
    ],
    'show_on_admin_routes' => $config->get('show_on_admin_routes'),
    'show_on_nonadmin_routes' => $config->get('show_on_nonadmin_routes'),
  ];

  return $settings_object;
}
